syntax = "proto3";
package garyeong.garyeong;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "garyeong/params.proto";
import "garyeong/models.proto";
// this line is used by starport scaffolding # 1

option go_package = "garyeong/x/garyeong/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/garyeong/garyeong/params";
  }
  // Queries a list of GetAllReports items.
	rpc GetAllReports(QueryGetAllReportsRequest) returns (QueryGetAllReportsResponse) {
		option (google.api.http).get = "/garyeong/garyeong/get_all_reports";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetAllReportsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryGetAllReportsResponse {
  repeated Report reports = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
